<link href="/assets/pslidecss/anything/animate.css" media="screen" rel="stylesheet" type="text/css"/>
<link href="/assets/pslidecss/anything/anythingslider.css" media="screen" rel="stylesheet" type="text/css"/>
<!--<link href="/assets/pslidecss/anything/anythingslider-ie.css" media="screen" rel="stylesheet" type="text/css"/>-->
<link href="/assets/pslidecss/anything/theme-metallic.css" media="screen" rel="stylesheet" type="text/css"/>
<script src="/assets/pslidejs/jquery.anythingslider.fx.min.js" type="text/javascript"></script>
<script src="/assets/pslidejs/jquery.anythingslider.min.js" type="text/javascript"></script>

<style>
    #slider {
        width: <%= @width %>px;
        height: <%= @height %>px;
    }

        /* images with caption */
    #slider img {
        width: <%= 0.95*@width %>px;
        height: <%= 0.95*@height %>px;
    }

        /* position the panels so the captions appear correctly */
    #slider .panel {
        position: relative;
    }

        /* captions */
    #slider .caption-top, #slider .caption-right,
    #slider .caption-bottom, #slider .caption-left {
        background: #000;
        color: #fff;
        padding: 10px;
        margin: 0;
        position: relative;
        z-index: 10;
        opacity: .8;
        filter: alpha(opacity = 80);
    }

        /*** Set Slider dimensions here! Version 1.7+ ***/
    #slider {
        /*background: white;*/
        /*width: 300px;*/
        /*height: 300px;*/
        list-style: none;
    }

    #slider li {
        position: relative;
    }


</style>

<script type="text/javascript">
    $(function () {
        // caption toggle animation time
        var toggleTime = 500,
        // always show caption when slide comes into view
                showCaptionInitially = true,

                updateCaption = function (slider, init) {
                    if (init && showCaptionInitially) {
                        setTimeout(function () {
                            slider.$targetPage.find('.caption').animate({
                                bottom:0
                            }, toggleTime);
                        }, slider.options.delayBeforeAnimate + toggleTime);
                    } else if (!init) {
                        var cap = slider.$lastPage.find('.caption');
                        cap.css('bottom', -cap.innerHeight());
                    }
                };

        $('#slider').anythingSlider({
            //    buildNavigation    : false,
            // *********** Callbacks ***********
            // Callback when the plugin finished initializing
            onInitialized:function (e, slider) {
                slider.$items.each(function () {
                    var cap = $(this).find('.caption');
                    cap.css('bottom', -cap.innerHeight()).click(function () {
                        cap.animate({
                            bottom:(cap.css('bottom') === "0px" ? -cap.innerHeight() : 0)
                        }, toggleTime);
                    });
                });
                updateCaption(slider, true);
            },

            // Callback before slide animates
            onSlideBegin:function (e, slider) {
                updateCaption(slider, true);
            },

            // Callback after slide animates
            onSlideComplete:function (slider) {
                updateCaption(slider, false);
            }

        });
    });
</script>
<ul id="slider">
  <% @pdata.photos.each do |photo| %>
      <li>
        <img src="<%= photo.image %>" style="max-height: <%= @height %>px"/>

        <% if photo.captions.count>0 %>
            <div class="caption"><%= photo.captions.first.caption %></div>
        <% end %>
      </li>
  <% end %>

</ul>

